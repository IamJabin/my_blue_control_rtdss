<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\rdts.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\rdts.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Sun Apr 06 14:17:59 2025
<BR><P>
<H3>Maximum Stack Usage =        432 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; borad_init &rArr; app_ble_init &rArr; app_ble_gap_params_init &rArr; SystemGetMacAddr &rArr; SystemTrimValueRead
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[1b]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">ADC_IRQHandler</a><BR>
 <LI><a href="#[70]">system_delay_cycles</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[70]">system_delay_cycles</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1b]">ADC_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[18]">BLE_CRYPT_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[17]">BLE_ERROR_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[10]">BLE_FIFO_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[f]">BLE_FINETGT_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[9]">BLE_HSLOT_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[20]">BLE_SLP_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[7]">BLE_SW_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[19]">BLE_TIMESTAMP_TGT1_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[1e]">BLE_TIMESTAMP_TGT2_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[11]">DMA_Channel1_2_3_4_IRQHandler</a> from bsp_usart.o(i.DMA_Channel1_2_3_4_IRQHandler) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[12]">DMA_Channel5_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[c]">EXTI0_1_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[d]">EXTI2_3_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[e]">EXTI4_12_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[a]">FLASH_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[1d]">I2C1_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[25]">IRC_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[21]">KEYSCAN_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[23]">LPUART1_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[b]">RCC_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[15]">RESERVED_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[1f]">SPI1_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[1c]">SPI2_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from bsp.o(i.SysTick_Handler) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[27]">SystemInit</a> from system_n32wb03x.o(i.SystemInit) referenced from startup_n32wb03x.o(.text)
 <LI><a href="#[13]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[14]">TIM1_CC_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[16]">TIM3_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[1a]">TIM6_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[22]">USART1_IRQHandler</a> from bsp_usart.o(i.USART1_IRQHandler) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[24]">USART2_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_n32wb03x.o(.text) referenced from startup_n32wb03x.o(RESET)
 <LI><a href="#[28]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_n32wb03x.o(.text)
 <LI><a href="#[2a]">app_ble_adv_msg_handler</a> from app_ble.o(i.app_ble_adv_msg_handler) referenced from app_ble.o(i.app_ble_adv_init)
 <LI><a href="#[2b]">app_ble_msg_handler</a> from app_ble.o(i.app_ble_msg_handler) referenced from app_ble.o(i.app_ble_init)
 <LI><a href="#[67]">app_conn_params_update_evt_handler</a> from ns_ble_task.o(i.app_conn_params_update_evt_handler) referenced from ns_ble_task.o(.constdata)
 <LI><a href="#[2d]">app_dis_add_dis</a> from app_dis.o(i.app_dis_add_dis) referenced from app_ble.o(i.app_ble_init)
 <LI><a href="#[52]">app_entry_point_handler</a> from ns_ble_task.o(i.app_entry_point_handler) referenced from ns_ble_task.o(.constdata)
 <LI><a href="#[68]">app_init_timeout_evt_handler</a> from ns_ble_task.o(i.app_init_timeout_evt_handler) referenced from ns_ble_task.o(.constdata)
 <LI><a href="#[66]">app_lsi_calib_evt_handler</a> from ns_ble_task.o(i.app_lsi_calib_evt_handler) referenced from ns_ble_task.o(.constdata)
 <LI><a href="#[2e]">app_rdtss_add_rdts</a> from app_rdtss.o(i.app_rdtss_add_rdts) referenced from app_ble.o(i.app_ble_init)
 <LI><a href="#[4d]">app_sec_msg_dflt_handler</a> from ns_sec.o(i.app_sec_msg_dflt_handler) referenced from ns_sec.o(.constdata)
 <LI><a href="#[2c]">app_user_msg_handler</a> from app_ble.o(i.app_user_msg_handler) referenced from app_ble.o(i.app_ble_init)
 <LI><a href="#[3c]">diss_cleanup</a> from diss.o(i.diss_cleanup) referenced from diss.o(.constdata)
 <LI><a href="#[3b]">diss_create</a> from diss.o(i.diss_create) referenced from diss.o(.constdata)
 <LI><a href="#[3a]">diss_destroy</a> from diss.o(i.diss_destroy) referenced from diss.o(.constdata)
 <LI><a href="#[39]">diss_init</a> from diss.o(i.diss_init) referenced from diss.o(.constdata)
 <LI><a href="#[2f]">diss_prf_itf_get</a> from diss.o(i.diss_prf_itf_get) referenced from app_dis.o(i.app_dis_add_dis)
 <LI><a href="#[3d]">diss_set_value_req_handler</a> from diss_task.o(i.diss_set_value_req_handler) referenced from diss_task.o(.constdata)
 <LI><a href="#[3f]">diss_value_cfm_handler</a> from diss_task.o(i.diss_value_cfm_handler) referenced from diss_task.o(.constdata)
 <LI><a href="#[6a]">diss_value_req_ind_handler</a> from app_dis.o(i.diss_value_req_ind_handler) referenced from app_dis.o(.constdata)
 <LI><a href="#[29]">fputc</a> from ns_log_lpuart.o(i.fputc) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[4f]">gapc_bond_ind_handler</a> from ns_sec.o(i.gapc_bond_ind_handler) referenced from ns_sec.o(.constdata)
 <LI><a href="#[4e]">gapc_bond_req_ind_handler</a> from ns_sec.o(i.gapc_bond_req_ind_handler) referenced from ns_sec.o(.constdata)
 <LI><a href="#[64]">gapc_cmp_evt_handler</a> from ns_ble_task.o(i.gapc_cmp_evt_handler) referenced from ns_ble_task.o(.constdata)
 <LI><a href="#[65]">gapc_conn_rssi_ind_handler</a> from ns_ble_task.o(i.gapc_conn_rssi_ind_handler) referenced from ns_ble_task.o(.constdata)
 <LI><a href="#[5c]">gapc_connection_req_ind_handler</a> from ns_ble_task.o(i.gapc_connection_req_ind_handler) referenced from ns_ble_task.o(.constdata)
 <LI><a href="#[60]">gapc_disconnect_ind_handler</a> from ns_ble_task.o(i.gapc_disconnect_ind_handler) referenced from ns_ble_task.o(.constdata)
 <LI><a href="#[51]">gapc_encrypt_ind_handler</a> from ns_sec.o(i.gapc_encrypt_ind_handler) referenced from ns_sec.o(.constdata)
 <LI><a href="#[50]">gapc_encrypt_req_ind_handler</a> from ns_sec.o(i.gapc_encrypt_req_ind_handler) referenced from ns_sec.o(.constdata)
 <LI><a href="#[61]">gapc_get_dev_info_req_ind_handler</a> from ns_ble_task.o(i.gapc_get_dev_info_req_ind_handler) referenced from ns_ble_task.o(.constdata)
 <LI><a href="#[62]">gapc_le_phy_ind_handler</a> from ns_ble_task.o(i.gapc_le_phy_ind_handler) referenced from ns_ble_task.o(.constdata)
 <LI><a href="#[5f]">gapc_le_pkt_size_ind_handler</a> from ns_ble_task.o(i.gapc_le_pkt_size_ind_handler) referenced from ns_ble_task.o(.constdata)
 <LI><a href="#[5d]">gapc_param_update_req_ind_handler</a> from ns_ble_task.o(i.gapc_param_update_req_ind_handler) referenced from ns_ble_task.o(.constdata)
 <LI><a href="#[5e]">gapc_param_updated_ind_handler</a> from ns_ble_task.o(i.gapc_param_updated_ind_handler) referenced from ns_ble_task.o(.constdata)
 <LI><a href="#[63]">gapc_set_dev_info_req_ind_handler</a> from ns_ble_task.o(i.gapc_set_dev_info_req_ind_handler) referenced from ns_ble_task.o(.constdata)
 <LI><a href="#[53]">gapm_activity_created_ind_handler</a> from ns_ble_task.o(i.gapm_activity_created_ind_handler) referenced from ns_ble_task.o(.constdata)
 <LI><a href="#[54]">gapm_activity_stopped_ind_handler</a> from ns_ble_task.o(i.gapm_activity_stopped_ind_handler) referenced from ns_ble_task.o(.constdata)
 <LI><a href="#[56]">gapm_addr_solved_ind_handler</a> from ns_ble_task.o(i.gapm_addr_solved_ind_handler) referenced from ns_ble_task.o(.constdata)
 <LI><a href="#[57]">gapm_cmp_evt_handler</a> from ns_ble_task.o(i.gapm_cmp_evt_handler) referenced from ns_ble_task.o(.constdata)
 <LI><a href="#[59]">gapm_ext_adv_repoer_ind_handler</a> from ns_ble_task.o(i.gapm_ext_adv_repoer_ind_handler) referenced from ns_ble_task.o(.constdata)
 <LI><a href="#[55]">gapm_gen_rand_nb_ind_handler</a> from ns_ble_task.o(i.gapm_gen_rand_nb_ind_handler) referenced from ns_ble_task.o(.constdata)
 <LI><a href="#[58]">gapm_profile_added_ind_handler</a> from ns_ble_task.o(i.gapm_profile_added_ind_handler) referenced from ns_ble_task.o(.constdata)
 <LI><a href="#[46]">gattc_att_info_req_ind_handler</a> from rdtss_task.o(i.gattc_att_info_req_ind_handler) referenced from rdtss_task.o(.constdata)
 <LI><a href="#[47]">gattc_cmp_evt_handler</a> from rdtss_task.o(i.gattc_cmp_evt_handler) referenced 2 times from rdtss_task.o(.constdata)
 <LI><a href="#[5a]">gattc_mtu_changed_ind_handler</a> from ns_ble_task.o(i.gattc_mtu_changed_ind_handler) referenced from ns_ble_task.o(.constdata)
 <LI><a href="#[3e]">gattc_read_req_ind_handler</a> from diss_task.o(i.gattc_read_req_ind_handler) referenced 2 times from diss_task.o(.constdata)
 <LI><a href="#[45]">gattc_write_req_ind_handler</a> from rdtss_task.o(i.gattc_write_req_ind_handler) referenced from rdtss_task.o(.constdata)
 <LI><a href="#[26]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[33]">ns_EXTI4_12_IRQHandler</a> from ns_ble.o(i.ns_EXTI4_12_IRQHandler) referenced from ns_ble.o(i.ns_ble_stack_init)
 <LI><a href="#[31]">ns_HardFault_Handler</a> from ns_ble.o(i.ns_HardFault_Handler) referenced from ns_ble.o(i.ns_ble_stack_init)
 <LI><a href="#[69]">ns_sec_bond_store_evt_handler</a> from ns_sec.o(i.ns_sec_bond_store_evt_handler) referenced from ns_ble_task.o(.constdata)
 <LI><a href="#[34]">prf_add_profile</a> from prf.o(i.prf_add_profile) referenced from ns_ble.o(i.ns_ble_stack_init)
 <LI><a href="#[36]">prf_get_id_from_task</a> from prf.o(i.prf_get_id_from_task) referenced from ns_ble.o(i.ns_ble_stack_init)
 <LI><a href="#[35]">prf_get_task_from_id</a> from prf.o(i.prf_get_task_from_id) referenced from ns_ble.o(i.ns_ble_stack_init)
 <LI><a href="#[4b]">rdtss_att_info_rsp_handler</a> from rdtss_task.o(i.rdtss_att_info_rsp_handler) referenced from rdtss_task.o(.constdata)
 <LI><a href="#[43]">rdtss_cleanup</a> from rdtss.o(i.rdtss_cleanup) referenced from rdtss.o(.constdata)
 <LI><a href="#[42]">rdtss_create</a> from rdtss.o(i.rdtss_create) referenced from rdtss.o(.constdata)
 <LI><a href="#[41]">rdtss_destroy</a> from rdtss.o(i.rdtss_destroy) referenced from rdtss.o(.constdata)
 <LI><a href="#[40]">rdtss_init</a> from rdtss.o(i.rdtss_init) referenced from rdtss.o(.constdata)
 <LI><a href="#[30]">rdtss_prf_itf_get</a> from rdtss.o(i.rdtss_prf_itf_get) referenced from app_rdtss.o(i.app_rdtss_add_rdts)
 <LI><a href="#[4a]">rdtss_val_ind_req_handler</a> from rdtss_task.o(i.rdtss_val_ind_req_handler) referenced from rdtss_task.o(.constdata)
 <LI><a href="#[6d]">rdtss_val_ntf_cfm_handler</a> from app_rdtss.o(i.rdtss_val_ntf_cfm_handler) referenced from app_rdtss.o(.constdata)
 <LI><a href="#[48]">rdtss_val_ntf_req_handler</a> from rdtss_task.o(i.rdtss_val_ntf_req_handler) referenced from rdtss_task.o(.constdata)
 <LI><a href="#[49]">rdtss_val_set_req_handler</a> from rdtss_task.o(i.rdtss_val_set_req_handler) referenced from rdtss_task.o(.constdata)
 <LI><a href="#[6c]">rdtss_val_write_ind_handler</a> from app_rdtss.o(i.rdtss_val_write_ind_handler) referenced from app_rdtss.o(.constdata)
 <LI><a href="#[6b]">rdtss_value_req_ind_handler</a> from app_rdtss.o(i.rdtss_value_req_ind_handler) referenced from app_rdtss.o(.constdata)
 <LI><a href="#[4c]">rdtss_value_req_rsp_handler</a> from rdtss_task.o(i.rdtss_value_req_rsp_handler) referenced from rdtss_task.o(.constdata)
 <LI><a href="#[32]">rwip_slp_isr</a> from rwip_driver.o(i.rwip_slp_isr) referenced from ns_ble.o(i.ns_ble_stack_init)
 <LI><a href="#[38]">timer_canceled_handler</a> from ns_timer.o(i.timer_canceled_handler) referenced from ns_timer.o(i.ns_timer_api_process_handler)
 <LI><a href="#[37]">timer_modified_handler</a> from ns_timer.o(i.timer_modified_handler) referenced from ns_timer.o(i.ns_timer_api_process_handler)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[139]"></a>__ARM_common_ll_muluu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_slp_isr (via Veneer)
</UL>

<P><STRONG><a name="[9f]"></a>__ARM_common_memcpy1_6</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_start_init (via Veneer)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_gap_init (via Veneer)
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_resolv_addr_start (via Veneer)
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_last_bonded_ral_info (via Veneer)
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_last_bonded_peer_id (via Veneer)
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler (via Veneer)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_params_init (via Veneer)
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler (via Veneer)
</UL>

<P><STRONG><a name="[133]"></a>ahi_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init (via Veneer)
</UL>

<P><STRONG><a name="[e0]"></a>attm_svc_create_db</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init (via Veneer)
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler (via Veneer)
</UL>

<P><STRONG><a name="[127]"></a>attm_svc_create_db_128</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_init (via Veneer)
</UL>

<P><STRONG><a name="[10d]"></a>attmdb_att_get_permission</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler (via Veneer)
</UL>

<P><STRONG><a name="[ca]"></a>attmdb_get_attribute</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_value (via Veneer)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_value_handle (via Veneer)
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cfg_handle (via Veneer)
</UL>

<P><STRONG><a name="[111]"></a>attmdb_get_service</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_value_handle (via Veneer)
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cfg_handle (via Veneer)
</UL>

<P><STRONG><a name="[112]"></a>attmdb_get_uuid</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_value_handle (via Veneer)
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cfg_handle (via Veneer)
</UL>

<P><STRONG><a name="[cb]"></a>attmdb_uuid16_comp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_value (via Veneer)
</UL>

<P><STRONG><a name="[118]"></a>calib_lsi_clk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_lsc_config
</UL>

<P><STRONG><a name="[e8]"></a>co_list_extract</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_att_set_value
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_init_ccc_values
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
</UL>

<P><STRONG><a name="[e3]"></a>co_list_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_init
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
</UL>

<P><STRONG><a name="[de]"></a>co_list_pop_front</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_destroy
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_destroy
</UL>

<P><STRONG><a name="[e9]"></a>co_list_push_back</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_att_set_value
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_init_ccc_values
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
</UL>

<P><STRONG><a name="[cf]"></a>delay_n_10us</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_soft_iic_wait_ack
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_soft_iic_stop
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_soft_iic_start
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_soft_iic_send_byte
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DigitronDisplay
</UL>

<P><STRONG><a name="[12f]"></a>ecc_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[131]"></a>h4tl_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[132]"></a>hci_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[f5]"></a>ke_event_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
</UL>

<P><STRONG><a name="[df]"></a>ke_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_val_ntf_req_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_val_ind_req_handler
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_att_set_value
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_init_ccc_values
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_destroy
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_destroy
</UL>

<P><STRONG><a name="[12c]"></a>ke_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[e1]"></a>ke_malloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_att_set_value
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_init_ccc_values
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
</UL>

<P><STRONG><a name="[12d]"></a>ke_mem_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[ab]"></a>ke_msg_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_value_req_rsp_handler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_val_ntf_req_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_val_ind_req_handler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_att_info_rsp_handler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_update_param
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_stop_scan
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_stop_init
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_start_scan
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_start_init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_stack_init
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_delete_scan
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_delete_init
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_adv_stop
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_adv_fsm_next
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_advertising
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_scan_rsp_data
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_adv_data
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_create_advertising
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_list_set_ral
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_disconnect
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_resolv_addr_start
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_timer_api_process_handler
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_send_notify
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_rdtss_add_rdts
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_value_req_ind_handler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dis_add_dis
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_req_ind_handler
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_conn_rssi_ind_handler
</UL>

<P><STRONG><a name="[f1]"></a>ke_msg_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
</UL>

<P><STRONG><a name="[ae]"></a>ke_msg_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_value_req_rsp_handler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_val_ntf_req_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_val_ind_req_handler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_att_info_rsp_handler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_update_param
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_stop_scan
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_stop_init
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_start_scan
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_start_init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_stack_init
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_delete_scan
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_delete_init
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_adv_stop
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_adv_fsm_next
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_advertising
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_scan_rsp_data
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_adv_data
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_create_advertising
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_list_set_ral
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_disconnect
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_resolv_addr_start
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_timer_api_process_handler
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_send_notify
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_rdtss_add_rdts
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_value_req_ind_handler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dis_add_dis
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_req_ind_handler
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_conn_rssi_ind_handler
</UL>

<P><STRONG><a name="[81]"></a>ke_msg_send_basic</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel1_2_3_4_IRQHandler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[ea]"></a>ke_state_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_value_req_rsp_handler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_val_ntf_req_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_val_ind_req_handler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_att_info_rsp_handler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_adv_fsm_next
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_profile_added_ind_handler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_conn_rssi_ind_handler
</UL>

<P><STRONG><a name="[e4]"></a>ke_state_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_value_req_rsp_handler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_val_ntf_req_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_val_ind_req_handler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_stack_init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[11b]"></a>ke_task_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_stack_init
</UL>

<P><STRONG><a name="[123]"></a>ke_task_delete</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
</UL>

<P><STRONG><a name="[124]"></a>ke_task_msg_flush</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
</UL>

<P><STRONG><a name="[f3]"></a>ke_timer_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[b4]"></a>ke_timer_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_peripheral_config
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_start_init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_sec_bond_store_evt_handler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_timer_api_process_handler
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_rx_data_fifo_enter
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_tx_fifo_enter
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_conn_rssi_ind_handler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lsi_calib_evt_handler
</UL>

<P><STRONG><a name="[12e]"></a>rf_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[134]"></a>rwble_hl_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[135]"></a>rwble_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[136]"></a>rwip_driver_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[130]"></a>rwip_eif_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[137]"></a>rwip_prevent_sleep_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_slp_isr
</UL>

<P><STRONG><a name="[138]"></a>rwip_prevent_sleep_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_slp_isr
</UL>

<P><STRONG><a name="[115]"></a>rwip_schedule</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ef]"></a>rwip_time_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol_g15.obj(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_peripheral_config
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_sec_bond_store_evt_handler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
</UL>

<P><STRONG><a name="[28]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(.text)
</UL>
<P><STRONG><a name="[13c]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[6e]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[7f]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[13d]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[13e]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[13f]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[140]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[141]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[142]"></a>__asm___17_system_n32wb03x_c_f233b82c____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system_n32wb03x.o(.emb_text), UNUSED)

<P><STRONG><a name="[143]"></a>__asm___17_system_n32wb03x_c_f233b82c____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system_n32wb03x.o(.emb_text), UNUSED)

<P><STRONG><a name="[70]"></a>system_delay_cycles</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, system_n32wb03x.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay_cycles
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay_cycles
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>BLE_CRYPT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>BLE_ERROR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>BLE_FIFO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>BLE_FINETGT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>BLE_HSLOT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>BLE_SLP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>BLE_SW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>BLE_TIMESTAMP_TGT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>BLE_TIMESTAMP_TGT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DMA_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>EXTI4_12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>IRC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>KEYSCAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>RESERVED_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[144]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_rx_data_fifo_enter
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DigitronDisplayTime
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_forward_to_ble_loop
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_tx_fifo_enter
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[145]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[71]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DigitronDisplayTime
</UL>

<P><STRONG><a name="[73]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_slp_isr
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[f0]"></a>rand</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
</UL>

<P><STRONG><a name="[107]"></a>srand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_gen_rand_nb_ind_handler
</UL>

<P><STRONG><a name="[91]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemTrimValueRead
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_value
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Qflash_Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_value_req_rsp_handler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_val_ntf_req_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_val_ind_req_handler
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_att_set_value
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_set_ccc_value
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_init_ccc_values
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_gap_init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_scan_rsp_data
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_adv_data
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_list_set_ral
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_sec_bond_store_evt_handler
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_search_addr_irk
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_resolv_addr_start
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_last_bonded_ral_info
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_db_load
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_rx_data_fifo_enter
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_params_init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_tx_fifo_enter
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_send_notify
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_value_req_ind_handler
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_solved_ind_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_req_ind_handler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
</UL>

<P><STRONG><a name="[9c]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_stack_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_adv_init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_adv_init
</UL>

<P><STRONG><a name="[146]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[77]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[147]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[148]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_stack_init
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_last_bonded_ral_info
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[9b]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_stack_init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_sec_bond_store_evt_handler
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_search_addr_irk
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_resolv_addr_start
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_last_bonded_ral_info
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_last_bonded_peer_id
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_adv_init
</UL>

<P><STRONG><a name="[149]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[f7]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_scan_data_find
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_search_addr_irk
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_ext_adv_repoer_ind_handler
</UL>

<P><STRONG><a name="[13a]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_slp_isr
</UL>

<P><STRONG><a name="[79]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_slp_isr
</UL>

<P><STRONG><a name="[7b]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_slp_isr
</UL>

<P><STRONG><a name="[7d]"></a>__aeabi_ul2f</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ffltul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ul2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_slp_isr
</UL>

<P><STRONG><a name="[7e]"></a>__aeabi_f2ulz</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ffixul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2ulz &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_slp_isr
</UL>

<P><STRONG><a name="[75]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2ulz
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[14a]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[14b]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[14c]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[7a]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>

<P><STRONG><a name="[7c]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2f
</UL>

<P><STRONG><a name="[6f]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[14d]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[14e]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[14f]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[11]"></a>DMA_Channel1_2_3_4_IRQHandler</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, bsp_usart.o(i.DMA_Channel1_2_3_4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DMA_Channel1_2_3_4_IRQHandler &rArr; usart_rx_check_in_irq &rArr; app_usart_rx_data_fifo_enter &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_rx_check_in_irq
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send_basic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>DMA_ClearFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32wb03x_dma.o(i.DMA_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel1_2_3_4_IRQHandler
</UL>

<P><STRONG><a name="[87]"></a>DMA_ConfigInt</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32wb03x_dma.o(i.DMA_ConfigInt))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Configuration
</UL>

<P><STRONG><a name="[84]"></a>DMA_Configuration</STRONG> (Thumb, 116 bytes, Stack size 56 bytes, bsp_usart.o(i.DMA_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DMA_Configuration &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_RequestRemap
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ConfigInt
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_configuration
</UL>

<P><STRONG><a name="[85]"></a>DMA_DeInit</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, n32wb03x_dma.o(i.DMA_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Configuration
</UL>

<P><STRONG><a name="[c2]"></a>DMA_EnableChannel</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32wb03x_dma.o(i.DMA_EnableChannel))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_tx_dma_send
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_configuration
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_dma_enable
</UL>

<P><STRONG><a name="[13b]"></a>DMA_GetCurrDataCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32wb03x_dma.o(i.DMA_GetCurrDataCounter))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_rx_check_in_irq
</UL>

<P><STRONG><a name="[80]"></a>DMA_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32wb03x_dma.o(i.DMA_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel1_2_3_4_IRQHandler
</UL>

<P><STRONG><a name="[88]"></a>DMA_Init</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, n32wb03x_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_tx_dma_send
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Configuration
</UL>

<P><STRONG><a name="[86]"></a>DMA_RequestRemap</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32wb03x_dma.o(i.DMA_RequestRemap))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Configuration
</UL>

<P><STRONG><a name="[117]"></a>EXTI_ClrITPendBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32wb03x_exti.o(i.EXTI_ClrITPendBit))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_EXTI4_12_IRQHandler
</UL>

<P><STRONG><a name="[116]"></a>EXTI_GetITStatus</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32wb03x_exti.o(i.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_EXTI4_12_IRQHandler
</UL>

<P><STRONG><a name="[119]"></a>EXTI_InitPeripheral</STRONG> (Thumb, 108 bytes, Stack size 4 bytes, n32wb03x_exti.o(i.EXTI_InitPeripheral))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = EXTI_InitPeripheral
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_stack_init
</UL>

<P><STRONG><a name="[be]"></a>GPIO_InitPeripheral</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, n32wb03x_gpio.o(i.GPIO_InitPeripheral))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_InitPeripheral
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_log_lpuart_init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_configuration
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_soft_iic_init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_dma_enable
</UL>

<P><STRONG><a name="[bd]"></a>GPIO_InitStruct</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32wb03x_gpio.o(i.GPIO_InitStruct))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_log_lpuart_init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_configuration
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_soft_iic_init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_dma_enable
</UL>

<P><STRONG><a name="[dc]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32wb03x_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_soft_iic_wait_ack
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_scan
</UL>

<P><STRONG><a name="[8d]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32wb03x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_soft_iic_wait_ack
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_soft_iic_stop
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_soft_iic_start
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_soft_iic_send_byte
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DigitronDisplay
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedOff
</UL>

<P><STRONG><a name="[8f]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32wb03x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_soft_iic_wait_ack
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_soft_iic_stop
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_soft_iic_start
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_soft_iic_send_byte
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DigitronDisplay
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_soft_iic_init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedOn
</UL>

<P><STRONG><a name="[ed]"></a>LPUART_ClrFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32wb03x_lpuart.o(i.LPUART_ClrFlag))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[120]"></a>LPUART_DeInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32wb03x_lpuart.o(i.LPUART_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_log_lpuart_init
</UL>

<P><STRONG><a name="[ec]"></a>LPUART_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32wb03x_lpuart.o(i.LPUART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[89]"></a>LPUART_Init</STRONG> (Thumb, 192 bytes, Stack size 56 bytes, n32wb03x_lpuart.o(i.LPUART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LPUART_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetLpuartClkSrc
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreqValue
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_log_lpuart_init
</UL>

<P><STRONG><a name="[eb]"></a>LPUART_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32wb03x_lpuart.o(i.LPUART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[8c]"></a>LedOff</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp_gpio.o(i.LedOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LedOff
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_msg_handler
</UL>

<P><STRONG><a name="[8e]"></a>LedOn</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp_gpio.o(i.LedOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LedOn
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_msg_handler
</UL>

<P><STRONG><a name="[bf]"></a>NVIC_Init</STRONG> (Thumb, 102 bytes, Stack size 4 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_configuration
</UL>

<P><STRONG><a name="[11c]"></a>Qflash_Erase_Sector</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, n32wb03x_qflash.o(i.Qflash_Erase_Sector))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Qflash_Erase_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_sec_bond_store_evt_handler
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_db_get_size
</UL>

<P><STRONG><a name="[90]"></a>Qflash_Init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, n32wb03x_qflash.o(i.Qflash_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Qflash_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_sec_init
</UL>

<P><STRONG><a name="[121]"></a>Qflash_Write</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, n32wb03x_qflash.o(i.Qflash_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Qflash_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_sec_bond_store_evt_handler
</UL>

<P><STRONG><a name="[11e]"></a>RCC_ConfigLpuartClk</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32wb03x_rcc.o(i.RCC_ConfigLpuartClk))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_log_lpuart_init
</UL>

<P><STRONG><a name="[bc]"></a>RCC_EnableAHBPeriphClk</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32wb03x_rcc.o(i.RCC_EnableAHBPeriphClk))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_stack_init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_configuration
</UL>

<P><STRONG><a name="[bb]"></a>RCC_EnableAPB2PeriphClk</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32wb03x_rcc.o(i.RCC_EnableAPB2PeriphClk))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_log_lpuart_init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_configuration
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_soft_iic_init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_init
</UL>

<P><STRONG><a name="[11f]"></a>RCC_EnableLpuartClk</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32wb03x_rcc.o(i.RCC_EnableLpuartClk))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_log_lpuart_init
</UL>

<P><STRONG><a name="[8b]"></a>RCC_GetClocksFreqValue</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, n32wb03x_rcc.o(i.RCC_GetClocksFreqValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetClocksFreqValue
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[8a]"></a>RCC_GetLpuartClkSrc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32wb03x_rcc.o(i.RCC_GetLpuartClkSrc))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Init
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bsp.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[d8]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_n32wb03x.o(i.SystemCoreClockUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[92]"></a>SystemGetMacAddr</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, system_n32wb03x.o(i.SystemGetMacAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = SystemGetMacAddr &rArr; SystemTrimValueRead
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemTrimValueRead
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_params_init
</UL>

<P><STRONG><a name="[27]"></a>SystemInit</STRONG> (Thumb, 320 bytes, Stack size 32 bytes, system_n32wb03x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = SystemInit &rArr; SystemTrimValueRead
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemTrimValueRead
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay_cycles
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(.text)
</UL>
<P><STRONG><a name="[93]"></a>SystemTrimValueRead</STRONG> (Thumb, 50 bytes, Stack size 344 bytes, system_n32wb03x.o(i.SystemTrimValueRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = SystemTrimValueRead
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGetMacAddr
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[db]"></a>SystickGetime</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp.o(i.SystickGetime))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_scan
</UL>

<P><STRONG><a name="[22]"></a>USART1_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bsp_usart.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USART1_IRQHandler &rArr; usart_rx_check_in_irq &rArr; app_usart_rx_data_fifo_enter &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_rx_check_in_irq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb03x.o(RESET)
</UL>
<P><STRONG><a name="[c0]"></a>USART_ConfigInt</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, n32wb03x_usart.o(i.USART_ConfigInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = USART_ConfigInt
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_configuration
</UL>

<P><STRONG><a name="[c3]"></a>USART_Enable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32wb03x_usart.o(i.USART_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_configuration
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_dma_enable
</UL>

<P><STRONG><a name="[c1]"></a>USART_EnableDMA</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32wb03x_usart.o(i.USART_EnableDMA))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_configuration
</UL>

<P><STRONG><a name="[94]"></a>USART_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32wb03x_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[95]"></a>USART_Init</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, n32wb03x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USART_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreqValue
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_configuration
</UL>

<P><STRONG><a name="[96]"></a>__0printf$8</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[150]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[a7]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_val_ntf_req_handler
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_peripheral_config
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_update_param
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_HardFault_Handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_EXTI4_12_IRQHandler
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_sec_bond_store_evt_handler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_rx_data_fifo_enter
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;borad_init
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_msg_handler
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_tx_fifo_enter
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_le_phy_ind_handler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[9a]"></a>app_ble_adv_init</STRONG> (Thumb, 90 bytes, Stack size 104 bytes, app_ble.o(i.app_ble_adv_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = app_ble_adv_init &rArr; ns_ble_adv_init
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_adv_init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_init
</UL>

<P><STRONG><a name="[2a]"></a>app_ble_adv_msg_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_ble.o(i.app_ble_adv_msg_handler))
<BR>[Address Reference Count : 1]<UL><LI> app_ble.o(i.app_ble_adv_init)
</UL>
<P><STRONG><a name="[9e]"></a>app_ble_gap_params_init</STRONG> (Thumb, 118 bytes, Stack size 56 bytes, app_ble.o(i.app_ble_gap_params_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = app_ble_gap_params_init &rArr; SystemGetMacAddr &rArr; SystemTrimValueRead
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGetMacAddr
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_gap_init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy1_6 (via Veneer)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_init
</UL>

<P><STRONG><a name="[a1]"></a>app_ble_init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, app_ble.o(i.app_ble_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = app_ble_init &rArr; app_ble_gap_params_init &rArr; SystemGetMacAddr &rArr; SystemTrimValueRead
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_stack_init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_adv_start
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_add_prf_func_register
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_sec_init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_params_init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_adv_init
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;borad_init
</UL>

<P><STRONG><a name="[2b]"></a>app_ble_msg_handler</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, app_ble.o(i.app_ble_msg_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = app_ble_msg_handler &rArr; app_usart_dma_enable &rArr; app_usart_configuration &rArr; DMA_Configuration &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_adv_start
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_dma_enable
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedOn
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedOff
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble.o(i.app_ble_init)
</UL>
<P><STRONG><a name="[a3]"></a>app_ble_sec_init</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, app_ble.o(i.app_ble_sec_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_ble_sec_init &rArr; ns_sec_init &rArr; ns_bond_db_get_size &rArr; Qflash_Erase_Sector
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_sec_init
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_init
</UL>

<P><STRONG><a name="[2d]"></a>app_dis_add_dis</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, app_dis.o(i.app_dis_add_dis))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_dis_add_dis
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_itf_func_register
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_prf_task_register
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble.o(i.app_ble_init)
</UL>
<P><STRONG><a name="[52]"></a>app_entry_point_handler</STRONG> (Thumb, 238 bytes, Stack size 56 bytes, ns_ble_task.o(i.app_entry_point_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_entry_point_handler &rArr; ns_timer_api_process_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_timer_api_process_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble_task.o(.constdata)
</UL>
<P><STRONG><a name="[2e]"></a>app_rdtss_add_rdts</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, app_rdtss.o(i.app_rdtss_add_rdts))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_rdtss_add_rdts
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_itf_func_register
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_prf_task_register
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble.o(i.app_ble_init)
</UL>
<P><STRONG><a name="[ba]"></a>app_usart_configuration</STRONG> (Thumb, 192 bytes, Stack size 56 bytes, bsp_usart.o(i.app_usart_configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = app_usart_configuration &rArr; DMA_Configuration &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitStruct
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitPeripheral
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_EnableChannel
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAHBPeriphClk
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAPB2PeriphClk
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_EnableDMA
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Enable
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ConfigInt
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_dma_enable
</UL>

<P><STRONG><a name="[a6]"></a>app_usart_dma_enable</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, bsp_usart.o(i.app_usart_dma_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = app_usart_dma_enable &rArr; app_usart_configuration &rArr; DMA_Configuration &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitStruct
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitPeripheral
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_EnableChannel
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Enable
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_sleep_lock_release
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_sleep_lock_acquire
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_msg_handler
</UL>

<P><STRONG><a name="[c5]"></a>app_usart_rx_data_fifo_enter</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, bsp_usart.o(i.app_usart_rx_data_fifo_enter))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_usart_rx_data_fifo_enter &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_rx_check_in_irq
</UL>

<P><STRONG><a name="[c6]"></a>app_usart_tx_fifo_enter</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, bsp_usart.o(i.app_usart_tx_fifo_enter))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_usart_tx_fifo_enter &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_val_write_ind_handler
</UL>

<P><STRONG><a name="[c7]"></a>app_usart_tx_process</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, bsp_usart.o(i.app_usart_tx_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_usart_tx_process &rArr; usart_tx_dma_send &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_tx_dma_send
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_user_msg_handler
</UL>

<P><STRONG><a name="[2c]"></a>app_user_msg_handler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_ble.o(i.app_user_msg_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_user_msg_handler &rArr; app_usart_tx_process &rArr; usart_tx_dma_send &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_tx_process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble.o(i.app_ble_init)
</UL>
<P><STRONG><a name="[c9]"></a>attm_att_set_value</STRONG> (Thumb, 172 bytes, Stack size 48 bytes, lib_att.o(i.attm_att_set_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = attm_att_set_value
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_uuid16_comp (via Veneer)
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_attribute (via Veneer)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_val_set_req_handler
</UL>

<P><STRONG><a name="[cc]"></a>borad_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app.o(i.borad_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = borad_init &rArr; app_ble_init &rArr; app_ble_gap_params_init &rArr; SystemGetMacAddr &rArr; SystemTrimValueRead
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_log_lpuart_init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ce]"></a>bsp_DigitronDisplay</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, bsp_smg.o(i.bsp_DigitronDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bsp_DigitronDisplay &rArr; drv_soft_iic_wait_ack
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_n_10us
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_soft_iic_wait_ack
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_soft_iic_send_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DigitronDisplayTime
</UL>

<P><STRONG><a name="[d2]"></a>bsp_DigitronDisplayTime</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, bsp_smg.o(i.bsp_DigitronDisplayTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bsp_DigitronDisplayTime &rArr; bsp_DigitronDisplay &rArr; drv_soft_iic_wait_ack
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DigitronDisplay
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_run
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[d3]"></a>bsp_DigitronPowerBrightnessSet</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bsp_smg.o(i.bsp_DigitronPowerBrightnessSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_DigitronPowerBrightnessSet &rArr; drv_soft_iic_wait_ack
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_soft_iic_wait_ack
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_soft_iic_stop
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_soft_iic_start
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_soft_iic_send_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[d6]"></a>bsp_init</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, bsp.o(i.bsp_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = bsp_init &rArr; bsp_DigitronDisplayTime &rArr; bsp_DigitronDisplay &rArr; drv_soft_iic_wait_ack
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_soft_iic_init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_init
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DigitronPowerBrightnessSet
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DigitronDisplayTime
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d9]"></a>bsp_key_init</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, bsp_key.o(i.bsp_key_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bsp_key_init &rArr; GPIO_InitPeripheral
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitStruct
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitPeripheral
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAPB2PeriphClk
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[da]"></a>bsp_key_scan</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, bsp_key.o(i.bsp_key_scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_key_scan
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystickGetime
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_run
</UL>

<P><STRONG><a name="[dd]"></a>bsp_run</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, bsp.o(i.bsp_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = bsp_run &rArr; bsp_DigitronDisplayTime &rArr; bsp_DigitronDisplay &rArr; drv_soft_iic_wait_ack
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_scan
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DigitronDisplayTime
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10e]"></a>check_client_char_cfg</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, rdts_common.o(i.check_client_char_cfg))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[e7]"></a>diss_check_val_len</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, diss.o(i.diss_check_val_len))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
</UL>

<P><STRONG><a name="[108]"></a>diss_handle_to_value</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, diss.o(i.diss_handle_to_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = diss_handle_to_value
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
</UL>

<P><STRONG><a name="[2f]"></a>diss_prf_itf_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, diss.o(i.diss_prf_itf_get))
<BR>[Address Reference Count : 1]<UL><LI> app_dis.o(i.app_dis_add_dis)
</UL>
<P><STRONG><a name="[e2]"></a>diss_task_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, diss_task.o(i.diss_task_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = diss_task_init &rArr; prf_env_get
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
</UL>

<P><STRONG><a name="[e6]"></a>diss_value_to_handle</STRONG> (Thumb, 58 bytes, Stack size 4 bytes, diss.o(i.diss_value_to_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = diss_value_to_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
</UL>

<P><STRONG><a name="[d7]"></a>drv_soft_iic_init</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, bsp_smg.o(i.drv_soft_iic_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = drv_soft_iic_init &rArr; GPIO_InitPeripheral
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitStruct
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitPeripheral
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAPB2PeriphClk
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[d0]"></a>drv_soft_iic_send_byte</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, bsp_smg.o(i.drv_soft_iic_send_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = drv_soft_iic_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_n_10us
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DigitronDisplay
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DigitronPowerBrightnessSet
</UL>

<P><STRONG><a name="[d4]"></a>drv_soft_iic_start</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, bsp_smg.o(i.drv_soft_iic_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_soft_iic_start
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_n_10us
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DigitronPowerBrightnessSet
</UL>

<P><STRONG><a name="[d5]"></a>drv_soft_iic_stop</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, bsp_smg.o(i.drv_soft_iic_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_soft_iic_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_n_10us
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DigitronPowerBrightnessSet
</UL>

<P><STRONG><a name="[d1]"></a>drv_soft_iic_wait_ack</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, bsp_smg.o(i.drv_soft_iic_wait_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = drv_soft_iic_wait_ack
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_n_10us
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DigitronDisplay
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DigitronPowerBrightnessSet
</UL>

<P><STRONG><a name="[29]"></a>fputc</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ns_log_lpuart.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_SendData
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_GetFlagStatus
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_ClrFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[110]"></a>get_cfg_handle</STRONG> (Thumb, 98 bytes, Stack size 56 bytes, rdts_common.o(i.get_cfg_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = get_cfg_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_attribute (via Veneer)
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_uuid (via Veneer)
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_service (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_val_ntf_req_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_val_ind_req_handler
</UL>

<P><STRONG><a name="[10c]"></a>get_value_handle</STRONG> (Thumb, 78 bytes, Stack size 56 bytes, rdts_common.o(i.get_value_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = get_value_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_attribute (via Veneer)
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_uuid (via Veneer)
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_service (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[b9]"></a>llhwc_modem_setmode</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, rwip_driver.o(i.llhwc_modem_setmode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = llhwc_modem_setmode &rArr; llhwc_setmode_reg_config
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llhwc_setmode_reg_config
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_start_scan
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_start_init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_advertising
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_le_phy_ind_handler
</UL>

<P><STRONG><a name="[114]"></a>llhwc_phy_prerx_flash</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, rwip_driver.o(i.llhwc_phy_prerx_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = llhwc_phy_prerx_flash &rArr; llhwc_setmode_reg_config
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llhwc_setmode_reg_config
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_slp_isr
</UL>

<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = main &rArr; borad_init &rArr; app_ble_init &rArr; app_ble_gap_params_init &rArr; SystemGetMacAddr &rArr; SystemTrimValueRead
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_run
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;borad_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[33]"></a>ns_EXTI4_12_IRQHandler</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, ns_ble.o(i.ns_EXTI4_12_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = ns_EXTI4_12_IRQHandler &rArr; ns_log_lpuart_init &rArr; LPUART_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClrITPendBit
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_log_lpuart_init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble.o(i.ns_ble_stack_init)
</UL>
<P><STRONG><a name="[31]"></a>ns_HardFault_Handler</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, ns_ble.o(i.ns_HardFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = ns_HardFault_Handler &rArr; ns_log_lpuart_init &rArr; LPUART_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_log_lpuart_init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble.o(i.ns_ble_stack_init)
</UL>
<P><STRONG><a name="[a4]"></a>ns_ble_add_prf_func_register</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ns_ble.o(i.ns_ble_add_prf_func_register))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_init
</UL>

<P><STRONG><a name="[100]"></a>ns_ble_add_svc</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ns_ble.o(i.ns_ble_add_svc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ns_ble_add_svc
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[f8]"></a>ns_ble_adv_fsm_next</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, ns_ble.o(i.ns_ble_adv_fsm_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ns_ble_adv_fsm_next &rArr; app_create_advertising &rArr; ns_bond_last_bonded_peer_id &rArr; ns_bond_db_get_size &rArr; Qflash_Erase_Sector
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_advertising
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_scan_rsp_data
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_adv_data
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_create_advertising
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_stopped_ind_handler
</UL>

<P><STRONG><a name="[9d]"></a>ns_ble_adv_init</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, ns_ble.o(i.ns_ble_adv_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ns_ble_adv_init
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_adv_init
</UL>

<P><STRONG><a name="[a5]"></a>ns_ble_adv_start</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, ns_ble.o(i.ns_ble_adv_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ns_ble_adv_start &rArr; app_create_advertising &rArr; ns_bond_last_bonded_peer_id &rArr; ns_bond_db_get_size &rArr; Qflash_Erase_Sector
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_create_advertising
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_msg_handler
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[101]"></a>ns_ble_adv_stop</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, ns_ble.o(i.ns_ble_adv_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ns_ble_adv_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[fa]"></a>ns_ble_delete_init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ns_ble.o(i.ns_ble_delete_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ns_ble_delete_init
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_stopped_ind_handler
</UL>

<P><STRONG><a name="[f9]"></a>ns_ble_delete_scan</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, ns_ble.o(i.ns_ble_delete_scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ns_ble_delete_scan
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_stopped_ind_handler
</UL>

<P><STRONG><a name="[ee]"></a>ns_ble_disconnect</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ns_ble.o(i.ns_ble_disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ns_ble_disconnect
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
</UL>

<P><STRONG><a name="[a0]"></a>ns_ble_gap_init</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, ns_ble.o(i.ns_ble_gap_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ns_ble_gap_init
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy1_6 (via Veneer)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_params_init
</UL>

<P><STRONG><a name="[f4]"></a>ns_ble_get_connection_num</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ns_ble.o(i.ns_ble_get_connection_num))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
</UL>

<P><STRONG><a name="[ff]"></a>ns_ble_list_set_ral</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, ns_ble.o(i.ns_ble_list_set_ral))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ns_ble_list_set_ral
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_sec_bond_store_evt_handler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[b3]"></a>ns_ble_lsc_config</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, ns_ble.o(i.ns_ble_lsc_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ns_ble_lsc_config
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_lsi_clk
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_peripheral_config
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lsi_calib_evt_handler
</UL>

<P><STRONG><a name="[af]"></a>ns_ble_prf_task_register</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ns_ble.o(i.ns_ble_prf_task_register))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_rdtss_add_rdts
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dis_add_dis
</UL>

<P><STRONG><a name="[105]"></a>ns_ble_scan_data_find</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, ns_ble.o(i.ns_ble_scan_data_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ns_ble_scan_data_find &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_ext_adv_repoer_ind_handler
</UL>

<P><STRONG><a name="[a2]"></a>ns_ble_stack_init</STRONG> (Thumb, 474 bytes, Stack size 32 bytes, ns_ble.o(i.ns_ble_stack_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ns_ble_stack_init &rArr; rwip_init &rArr; llhwc_phy_prerx_flash &rArr; llhwc_setmode_reg_config
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_InitPeripheral
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAHBPeriphClk
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_init
</UL>

<P><STRONG><a name="[104]"></a>ns_ble_start_init</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, ns_ble.o(i.ns_ble_start_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ns_ble_start_init &rArr; llhwc_modem_setmode &rArr; llhwc_setmode_reg_config
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llhwc_modem_setmode
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy1_6 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_ext_adv_repoer_ind_handler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[102]"></a>ns_ble_start_scan</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, ns_ble.o(i.ns_ble_start_scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ns_ble_start_scan &rArr; llhwc_modem_setmode &rArr; llhwc_setmode_reg_config
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llhwc_modem_setmode
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[b2]"></a>ns_ble_stop_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, ns_ble.o(i.ns_ble_stop_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ns_ble_stop_init
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_timeout_evt_handler
</UL>

<P><STRONG><a name="[106]"></a>ns_ble_stop_scan</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, ns_ble.o(i.ns_ble_stop_scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ns_ble_stop_scan
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_ext_adv_repoer_ind_handler
</UL>

<P><STRONG><a name="[a9]"></a>ns_ble_update_param</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, ns_ble.o(i.ns_ble_update_param))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ns_ble_update_param &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_conn_params_update_evt_handler
</UL>

<P><STRONG><a name="[ad]"></a>ns_bond_last_bonded_peer_id</STRONG> (Thumb, 48 bytes, Stack size 72 bytes, ns_sec.o(i.ns_bond_last_bonded_peer_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ns_bond_last_bonded_peer_id &rArr; ns_bond_db_get_size &rArr; Qflash_Erase_Sector
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_db_load
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_db_get_size
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy1_6 (via Veneer)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_create_advertising
</UL>

<P><STRONG><a name="[fe]"></a>ns_bond_last_bonded_ral_info</STRONG> (Thumb, 92 bytes, Stack size 72 bytes, ns_sec.o(i.ns_bond_last_bonded_ral_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ns_bond_last_bonded_ral_info &rArr; ns_bond_db_get_size &rArr; Qflash_Erase_Sector
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_db_load
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_db_get_size
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy1_6 (via Veneer)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[103]"></a>ns_bond_resolv_addr_start</STRONG> (Thumb, 92 bytes, Stack size 80 bytes, ns_sec.o(i.ns_bond_resolv_addr_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ns_bond_resolv_addr_start &rArr; ns_bond_db_get_size &rArr; Qflash_Erase_Sector
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_db_load
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_db_get_size
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy1_6 (via Veneer)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_search_addr_irk
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[fb]"></a>ns_bond_search_addr_irk</STRONG> (Thumb, 110 bytes, Stack size 88 bytes, ns_sec.o(i.ns_bond_search_addr_irk))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = ns_bond_search_addr_irk &rArr; ns_bond_resolv_addr_start &rArr; ns_bond_db_get_size &rArr; Qflash_Erase_Sector
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_resolv_addr_start
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_db_get_size
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_solved_ind_handler
</UL>

<P><STRONG><a name="[cd]"></a>ns_log_lpuart_init</STRONG> (Thumb, 92 bytes, Stack size 48 bytes, ns_log_lpuart.o(i.ns_log_lpuart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = ns_log_lpuart_init &rArr; LPUART_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitStruct
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitPeripheral
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableLpuartClk
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAPB2PeriphClk
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ConfigLpuartClk
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Init
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_HardFault_Handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_EXTI4_12_IRQHandler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;borad_init
</UL>

<P><STRONG><a name="[fd]"></a>ns_peripheral_config</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, ns_ble.o(i.ns_peripheral_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ns_peripheral_config &rArr; ns_ble_lsc_config
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_lsc_config
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_sleep_lock_acquire
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[69]"></a>ns_sec_bond_store_evt_handler</STRONG> (Thumb, 292 bytes, Stack size 368 bytes, ns_sec.o(i.ns_sec_bond_store_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = ns_sec_bond_store_evt_handler &rArr; ns_ble_list_set_ral
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Qflash_Write
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Qflash_Erase_Sector
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_list_set_ral
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_db_get_size
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble_task.o(.constdata)
</UL>
<P><STRONG><a name="[ac]"></a>ns_sec_get_bond_status</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ns_sec.o(i.ns_sec_get_bond_status))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_create_advertising
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[f2]"></a>ns_sec_get_iocap</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ns_sec.o(i.ns_sec_get_iocap))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[a8]"></a>ns_sec_init</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, ns_sec.o(i.ns_sec_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ns_sec_init &rArr; ns_bond_db_get_size &rArr; Qflash_Erase_Sector
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Qflash_Init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_db_get_size
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_sec_init
</UL>

<P><STRONG><a name="[c4]"></a>ns_sleep_lock_acquire</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ns_sleep.o(i.ns_sleep_lock_acquire))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_peripheral_config
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_dma_enable
</UL>

<P><STRONG><a name="[b5]"></a>ns_sleep_lock_release</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ns_sleep.o(i.ns_sleep_lock_release))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_dma_enable
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lsi_calib_evt_handler
</UL>

<P><STRONG><a name="[b1]"></a>ns_timer_api_process_handler</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, ns_timer.o(i.ns_timer_api_process_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ns_timer_api_process_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_point_handler
</UL>

<P><STRONG><a name="[34]"></a>prf_add_profile</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, prf.o(i.prf_add_profile))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = prf_add_profile &rArr; prf_itf_get
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble.o(i.ns_ble_stack_init)
</UL>
<P><STRONG><a name="[109]"></a>prf_dst_task_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, prf.o(i.prf_dst_task_get))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
</UL>

<P><STRONG><a name="[e5]"></a>prf_env_get</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, prf.o(i.prf_env_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_get_att_idx
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_get_att_handle
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_val_set_req_handler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_val_ntf_req_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_val_ind_req_handler
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_att_set_value
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_att_info_rsp_handler
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_att_get_value
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_task_init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_init_ccc_values
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_task_init
</UL>

<P><STRONG><a name="[36]"></a>prf_get_id_from_task</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, prf.o(i.prf_get_id_from_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prf_get_id_from_task
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble.o(i.ns_ble_stack_init)
</UL>
<P><STRONG><a name="[b0]"></a>prf_get_itf_func_register</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, prf.o(i.prf_get_itf_func_register))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_rdtss_add_rdts
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dis_add_dis
</UL>

<P><STRONG><a name="[35]"></a>prf_get_task_from_id</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, prf.o(i.prf_get_task_from_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prf_get_task_from_id
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_send_notify
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble.o(i.ns_ble_stack_init)
</UL>
<P><STRONG><a name="[fc]"></a>prf_init</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, prf.o(i.prf_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prf_init
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_msg_flush
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_delete
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_stack_init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[126]"></a>rdtss_get_att_handle</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, rdts_common.o(i.rdtss_get_att_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = rdtss_get_att_handle &rArr; prf_env_get
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_value_req_rsp_handler
</UL>

<P><STRONG><a name="[10a]"></a>rdtss_get_att_idx</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, rdts_common.o(i.rdtss_get_att_idx))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rdtss_get_att_idx &rArr; prf_env_get
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_val_ntf_req_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_val_ind_req_handler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
</UL>

<P><STRONG><a name="[129]"></a>rdtss_init_ccc_values</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, rdtss_task.o(i.rdtss_init_ccc_values))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = rdtss_init_ccc_values &rArr; prf_env_get
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_extract
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_init
</UL>

<P><STRONG><a name="[30]"></a>rdtss_prf_itf_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rdtss.o(i.rdtss_prf_itf_get))
<BR>[Address Reference Count : 1]<UL><LI> app_rdtss.o(i.app_rdtss_add_rdts)
</UL>
<P><STRONG><a name="[12a]"></a>rdtss_send_notify</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, app_rdtss.o(i.rdtss_send_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rdtss_send_notify &rArr; prf_get_task_from_id
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_forward_to_ble_loop
</UL>

<P><STRONG><a name="[125]"></a>rdtss_set_ccc_value</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, rdtss_task.o(i.rdtss_set_ccc_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = rdtss_set_ccc_value &rArr; rdtss_att_set_value &rArr; prf_env_get
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_att_set_value
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_att_get_value
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_create
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_cleanup
</UL>

<P><STRONG><a name="[128]"></a>rdtss_task_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, rdtss_task.o(i.rdtss_task_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = rdtss_task_init &rArr; prf_env_get
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_init
</UL>

<P><STRONG><a name="[11a]"></a>rwip_init</STRONG> (Thumb, 198 bytes, Stack size 8 bytes, rwip.o(i.rwip_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rwip_init &rArr; llhwc_phy_prerx_flash &rArr; llhwc_setmode_reg_config
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_eif_get
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_driver_init
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llhwc_phy_prerx_flash
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_mem_init
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_init
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_init
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h4tl_init
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecc_init
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ahi_init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_stack_init
</UL>

<P><STRONG><a name="[32]"></a>rwip_slp_isr</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, rwip_driver.o(i.rwip_slp_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = rwip_slp_isr &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llhwc_phy_prerx_flash
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2f
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2ulz
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_muluu (via Veneer)
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble.o(i.ns_ble_stack_init)
</UL>
<P><STRONG><a name="[12b]"></a>usart_forward_to_ble_loop</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, bsp_usart.o(i.usart_forward_to_ble_loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = usart_forward_to_ble_loop &rArr; rdtss_send_notify &rArr; prf_get_task_from_id
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_send_notify
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_val_ntf_cfm_handler
</UL>

<P><STRONG><a name="[83]"></a>usart_rx_check_in_irq</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, bsp_usart.o(i.usart_rx_check_in_irq))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = usart_rx_check_in_irq &rArr; app_usart_rx_data_fifo_enter &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetCurrDataCounter
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_rx_data_fifo_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel1_2_3_4_IRQHandler
</UL>

<P><STRONG><a name="[c8]"></a>usart_tx_dma_send</STRONG> (Thumb, 78 bytes, Stack size 56 bytes, bsp_usart.o(i.usart_tx_dma_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = usart_tx_dma_send &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_EnableChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_tx_process
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[113]"></a>llhwc_setmode_reg_config</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, rwip_driver.o(i.llhwc_setmode_reg_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = llhwc_setmode_reg_config
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llhwc_phy_prerx_flash
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llhwc_modem_setmode
</UL>

<P><STRONG><a name="[122]"></a>prf_itf_get</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, prf.o(i.prf_itf_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prf_itf_get
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_add_profile
</UL>

<P><STRONG><a name="[3c]"></a>diss_cleanup</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, diss.o(i.diss_cleanup))
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[3b]"></a>diss_create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, diss.o(i.diss_create))
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[3a]"></a>diss_destroy</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, diss.o(i.diss_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = diss_destroy
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[39]"></a>diss_init</STRONG> (Thumb, 152 bytes, Stack size 56 bytes, diss.o(i.diss_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = diss_init &rArr; diss_task_init &rArr; prf_env_get
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_task_init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[3d]"></a>diss_set_value_req_handler</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, diss_task.o(i.diss_set_value_req_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = diss_set_value_req_handler &rArr; diss_value_to_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_extract
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_to_handle
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_check_val_len
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss_task.o(.constdata)
</UL>
<P><STRONG><a name="[3f]"></a>diss_value_cfm_handler</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, diss_task.o(i.diss_value_cfm_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = diss_value_cfm_handler &rArr; diss_value_to_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_to_handle
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss_task.o(.constdata)
</UL>
<P><STRONG><a name="[3e]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, diss_task.o(i.gattc_read_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gattc_read_req_ind_handler &rArr; diss_handle_to_value
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_handle_to_value
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss_task.o(.constdata)
</UL>
<P><STRONG><a name="[43]"></a>rdtss_cleanup</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, rdtss.o(i.rdtss_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = rdtss_cleanup &rArr; rdtss_set_ccc_value &rArr; rdtss_att_set_value &rArr; prf_env_get
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_set_ccc_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rdtss.o(.constdata)
</UL>
<P><STRONG><a name="[42]"></a>rdtss_create</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, rdtss.o(i.rdtss_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = rdtss_create &rArr; rdtss_set_ccc_value &rArr; rdtss_att_set_value &rArr; prf_env_get
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_set_ccc_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rdtss.o(.constdata)
</UL>
<P><STRONG><a name="[41]"></a>rdtss_destroy</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, rdtss.o(i.rdtss_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rdtss_destroy
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rdtss.o(.constdata)
</UL>
<P><STRONG><a name="[40]"></a>rdtss_init</STRONG> (Thumb, 152 bytes, Stack size 56 bytes, rdtss.o(i.rdtss_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = rdtss_init &rArr; rdtss_init_ccc_values &rArr; prf_env_get
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_task_init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_init_ccc_values
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db_128 (via Veneer)
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rdtss.o(.constdata)
</UL>
<P><STRONG><a name="[46]"></a>gattc_att_info_req_ind_handler</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, rdtss_task.o(i.gattc_att_info_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = gattc_att_info_req_ind_handler &rArr; prf_env_get
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rdtss_task.o(.constdata)
</UL>
<P><STRONG><a name="[47]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, rdtss_task.o(i.gattc_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = gattc_cmp_evt_handler &rArr; prf_env_get
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rdtss_task.o(.constdata)
</UL>
<P><STRONG><a name="[44]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 212 bytes, Stack size 56 bytes, rdtss_task.o(i.gattc_read_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = gattc_read_req_ind_handler &rArr; rdtss_get_att_idx &rArr; prf_env_get
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_get_att_idx
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_att_get_value
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rdtss_task.o(.constdata)
</UL>
<P><STRONG><a name="[45]"></a>gattc_write_req_ind_handler</STRONG> (Thumb, 260 bytes, Stack size 80 bytes, rdtss_task.o(i.gattc_write_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gattc_write_req_ind_handler &rArr; get_value_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_get_att_idx
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_value_handle
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_client_char_cfg
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_att_get_permission (via Veneer)
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_att_set_value
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_att_get_value
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rdtss_task.o(.constdata)
</UL>
<P><STRONG><a name="[10b]"></a>rdtss_att_get_value</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, rdtss_task.o(i.rdtss_att_get_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rdtss_att_get_value &rArr; prf_env_get
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_val_ntf_req_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_val_ind_req_handler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_set_ccc_value
</UL>

<P><STRONG><a name="[4b]"></a>rdtss_att_info_rsp_handler</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, rdtss_task.o(i.rdtss_att_info_rsp_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rdtss_att_info_rsp_handler &rArr; prf_env_get
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rdtss_task.o(.constdata)
</UL>
<P><STRONG><a name="[10f]"></a>rdtss_att_set_value</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, rdtss_task.o(i.rdtss_att_set_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = rdtss_att_set_value &rArr; prf_env_get
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_extract
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_set_ccc_value
</UL>

<P><STRONG><a name="[4a]"></a>rdtss_val_ind_req_handler</STRONG> (Thumb, 176 bytes, Stack size 48 bytes, rdtss_task.o(i.rdtss_val_ind_req_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = rdtss_val_ind_req_handler &rArr; get_cfg_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_get_att_idx
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cfg_handle
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_att_get_value
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rdtss_task.o(.constdata)
</UL>
<P><STRONG><a name="[48]"></a>rdtss_val_ntf_req_handler</STRONG> (Thumb, 180 bytes, Stack size 48 bytes, rdtss_task.o(i.rdtss_val_ntf_req_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = rdtss_val_ntf_req_handler &rArr; get_cfg_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_get_att_idx
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cfg_handle
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_att_get_value
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rdtss_task.o(.constdata)
</UL>
<P><STRONG><a name="[49]"></a>rdtss_val_set_req_handler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, rdtss_task.o(i.rdtss_val_set_req_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rdtss_val_set_req_handler &rArr; attm_att_set_value
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_value
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rdtss_task.o(.constdata)
</UL>
<P><STRONG><a name="[4c]"></a>rdtss_value_req_rsp_handler</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, rdtss_task.o(i.rdtss_value_req_rsp_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = rdtss_value_req_rsp_handler &rArr; rdtss_get_att_handle &rArr; prf_env_get
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdtss_get_att_handle
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rdtss_task.o(.constdata)
</UL>
<P><STRONG><a name="[38]"></a>timer_canceled_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ns_timer.o(i.timer_canceled_handler))
<BR>[Address Reference Count : 1]<UL><LI> ns_timer.o(i.ns_timer_api_process_handler)
</UL>
<P><STRONG><a name="[37]"></a>timer_modified_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ns_timer.o(i.timer_modified_handler))
<BR>[Address Reference Count : 1]<UL><LI> ns_timer.o(i.ns_timer_api_process_handler)
</UL>
<P><STRONG><a name="[4d]"></a>app_sec_msg_dflt_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ns_sec.o(i.app_sec_msg_dflt_handler))
<BR>[Address Reference Count : 1]<UL><LI> ns_sec.o(.constdata)
</UL>
<P><STRONG><a name="[4f]"></a>gapc_bond_ind_handler</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, ns_sec.o(i.gapc_bond_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gapc_bond_ind_handler &rArr; ns_ble_disconnect
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_disconnect
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy1_6 (via Veneer)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_sec.o(.constdata)
</UL>
<P><STRONG><a name="[4e]"></a>gapc_bond_req_ind_handler</STRONG> (Thumb, 454 bytes, Stack size 40 bytes, ns_sec.o(i.gapc_bond_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = gapc_bond_req_ind_handler &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_sec.o(.constdata)
</UL>
<P><STRONG><a name="[51]"></a>gapc_encrypt_ind_handler</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ns_sec.o(i.gapc_encrypt_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapc_encrypt_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_sec.o(.constdata)
</UL>
<P><STRONG><a name="[50]"></a>gapc_encrypt_req_ind_handler</STRONG> (Thumb, 286 bytes, Stack size 104 bytes, ns_sec.o(i.gapc_encrypt_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gapc_encrypt_req_ind_handler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_db_get_size
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_sec.o(.constdata)
</UL>
<P><STRONG><a name="[f6]"></a>ns_bond_db_get_size</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ns_sec.o(i.ns_bond_db_get_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ns_bond_db_get_size &rArr; Qflash_Erase_Sector
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Qflash_Erase_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_sec_init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_sec_bond_store_evt_handler
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_search_addr_irk
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_resolv_addr_start
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_last_bonded_ral_info
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_last_bonded_peer_id
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
</UL>

<P><STRONG><a name="[11d]"></a>ns_bond_db_load</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ns_sec.o(i.ns_bond_db_load))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ns_bond_db_load
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_resolv_addr_start
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_last_bonded_ral_info
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_last_bonded_peer_id
</UL>

<P><STRONG><a name="[aa]"></a>app_create_advertising</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, ns_ble.o(i.app_create_advertising))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = app_create_advertising &rArr; ns_bond_last_bonded_peer_id &rArr; ns_bond_db_get_size &rArr; Qflash_Erase_Sector
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_sec_get_bond_status
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_last_bonded_peer_id
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_adv_start
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_adv_fsm_next
</UL>

<P><STRONG><a name="[b6]"></a>app_set_adv_data</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, ns_ble.o(i.app_set_adv_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_set_adv_data
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_adv_fsm_next
</UL>

<P><STRONG><a name="[b7]"></a>app_set_scan_rsp_data</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, ns_ble.o(i.app_set_scan_rsp_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_set_scan_rsp_data
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_adv_fsm_next
</UL>

<P><STRONG><a name="[b8]"></a>app_start_advertising</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, ns_ble.o(i.app_start_advertising))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_start_advertising &rArr; llhwc_modem_setmode &rArr; llhwc_setmode_reg_config
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llhwc_modem_setmode
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_adv_fsm_next
</UL>

<P><STRONG><a name="[67]"></a>app_conn_params_update_evt_handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ns_ble_task.o(i.app_conn_params_update_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_conn_params_update_evt_handler &rArr; ns_ble_update_param &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_update_param
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble_task.o(.constdata)
</UL>
<P><STRONG><a name="[68]"></a>app_init_timeout_evt_handler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ns_ble_task.o(i.app_init_timeout_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_init_timeout_evt_handler &rArr; ns_ble_stop_init
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_stop_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble_task.o(.constdata)
</UL>
<P><STRONG><a name="[66]"></a>app_lsi_calib_evt_handler</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, ns_ble_task.o(i.app_lsi_calib_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_lsi_calib_evt_handler &rArr; ns_ble_lsc_config
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_lsc_config
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_sleep_lock_release
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble_task.o(.constdata)
</UL>
<P><STRONG><a name="[64]"></a>gapc_cmp_evt_handler</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ns_ble_task.o(i.gapc_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapc_cmp_evt_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble_task.o(.constdata)
</UL>
<P><STRONG><a name="[65]"></a>gapc_conn_rssi_ind_handler</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, ns_ble_task.o(i.gapc_conn_rssi_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapc_conn_rssi_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble_task.o(.constdata)
</UL>
<P><STRONG><a name="[5c]"></a>gapc_connection_req_ind_handler</STRONG> (Thumb, 316 bytes, Stack size 48 bytes, ns_ble_task.o(i.gapc_connection_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = gapc_connection_req_ind_handler &rArr; ns_ble_adv_start &rArr; app_create_advertising &rArr; ns_bond_last_bonded_peer_id &rArr; ns_bond_db_get_size &rArr; Qflash_Erase_Sector
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_adv_start
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_sec_get_iocap
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_sec_get_bond_status
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy1_6 (via Veneer)
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send_basic
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble_task.o(.constdata)
</UL>
<P><STRONG><a name="[60]"></a>gapc_disconnect_ind_handler</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, ns_ble_task.o(i.gapc_disconnect_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gapc_disconnect_ind_handler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_get_connection_num
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_set
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble_task.o(.constdata)
</UL>
<P><STRONG><a name="[61]"></a>gapc_get_dev_info_req_ind_handler</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, ns_ble_task.o(i.gapc_get_dev_info_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapc_get_dev_info_req_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble_task.o(.constdata)
</UL>
<P><STRONG><a name="[62]"></a>gapc_le_phy_ind_handler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ns_ble_task.o(i.gapc_le_phy_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gapc_le_phy_ind_handler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llhwc_modem_setmode
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble_task.o(.constdata)
</UL>
<P><STRONG><a name="[5f]"></a>gapc_le_pkt_size_ind_handler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ns_ble_task.o(i.gapc_le_pkt_size_ind_handler))
<BR>[Address Reference Count : 1]<UL><LI> ns_ble_task.o(.constdata)
</UL>
<P><STRONG><a name="[5d]"></a>gapc_param_update_req_ind_handler</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, ns_ble_task.o(i.gapc_param_update_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = gapc_param_update_req_ind_handler &rArr; ns_ble_adv_start &rArr; app_create_advertising &rArr; ns_bond_last_bonded_peer_id &rArr; ns_bond_db_get_size &rArr; Qflash_Erase_Sector
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_adv_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble_task.o(.constdata)
</UL>
<P><STRONG><a name="[5e]"></a>gapc_param_updated_ind_handler</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ns_ble_task.o(i.gapc_param_updated_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapc_param_updated_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble_task.o(.constdata)
</UL>
<P><STRONG><a name="[63]"></a>gapc_set_dev_info_req_ind_handler</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ns_ble_task.o(i.gapc_set_dev_info_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapc_set_dev_info_req_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble_task.o(.constdata)
</UL>
<P><STRONG><a name="[53]"></a>gapm_activity_created_ind_handler</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, ns_ble_task.o(i.gapm_activity_created_ind_handler))
<BR>[Address Reference Count : 1]<UL><LI> ns_ble_task.o(.constdata)
</UL>
<P><STRONG><a name="[54]"></a>gapm_activity_stopped_ind_handler</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, ns_ble_task.o(i.gapm_activity_stopped_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = gapm_activity_stopped_ind_handler &rArr; ns_ble_adv_fsm_next &rArr; app_create_advertising &rArr; ns_bond_last_bonded_peer_id &rArr; ns_bond_db_get_size &rArr; Qflash_Erase_Sector
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_delete_scan
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_delete_init
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_adv_fsm_next
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble_task.o(.constdata)
</UL>
<P><STRONG><a name="[56]"></a>gapm_addr_solved_ind_handler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ns_ble_task.o(i.gapm_addr_solved_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = gapm_addr_solved_ind_handler &rArr; ns_bond_search_addr_irk &rArr; ns_bond_resolv_addr_start &rArr; ns_bond_db_get_size &rArr; Qflash_Erase_Sector
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_search_addr_irk
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble_task.o(.constdata)
</UL>
<P><STRONG><a name="[57]"></a>gapm_cmp_evt_handler</STRONG> (Thumb, 886 bytes, Stack size 64 bytes, ns_ble_task.o(i.gapm_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = gapm_cmp_evt_handler &rArr; ns_ble_adv_fsm_next &rArr; app_create_advertising &rArr; ns_bond_last_bonded_peer_id &rArr; ns_bond_db_get_size &rArr; Qflash_Erase_Sector
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db (via Veneer)
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llhwc_modem_setmode
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_peripheral_config
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_start_scan
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_start_init
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_delete_scan
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_delete_init
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_adv_stop
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_adv_start
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_adv_fsm_next
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_add_svc
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_list_set_ral
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_sec_get_bond_status
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_resolv_addr_start
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_bond_last_bonded_ral_info
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble_task.o(.constdata)
</UL>
<P><STRONG><a name="[59]"></a>gapm_ext_adv_repoer_ind_handler</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, ns_ble_task.o(i.gapm_ext_adv_repoer_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = gapm_ext_adv_repoer_ind_handler &rArr; ns_ble_scan_data_find &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_stop_scan
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_start_init
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns_ble_scan_data_find
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble_task.o(.constdata)
</UL>
<P><STRONG><a name="[55]"></a>gapm_gen_rand_nb_ind_handler</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, ns_ble_task.o(i.gapm_gen_rand_nb_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapm_gen_rand_nb_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble_task.o(.constdata)
</UL>
<P><STRONG><a name="[58]"></a>gapm_profile_added_ind_handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ns_ble_task.o(i.gapm_profile_added_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapm_profile_added_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble_task.o(.constdata)
</UL>
<P><STRONG><a name="[5b]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ns_ble_task.o(i.gattc_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gattc_cmp_evt_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble_task.o(.constdata)
</UL>
<P><STRONG><a name="[5a]"></a>gattc_mtu_changed_ind_handler</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, ns_ble_task.o(i.gattc_mtu_changed_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gattc_mtu_changed_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ns_ble_task.o(.constdata)
</UL>
<P><STRONG><a name="[6a]"></a>diss_value_req_ind_handler</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, app_dis.o(i.diss_value_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = diss_value_req_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_dis.o(.constdata)
</UL>
<P><STRONG><a name="[6d]"></a>rdtss_val_ntf_cfm_handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, app_rdtss.o(i.rdtss_val_ntf_cfm_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = rdtss_val_ntf_cfm_handler &rArr; usart_forward_to_ble_loop &rArr; rdtss_send_notify &rArr; prf_get_task_from_id
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_forward_to_ble_loop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_rdtss.o(.constdata)
</UL>
<P><STRONG><a name="[6c]"></a>rdtss_val_write_ind_handler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app_rdtss.o(i.rdtss_val_write_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rdtss_val_write_ind_handler &rArr; app_usart_tx_fifo_enter &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_usart_tx_fifo_enter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_rdtss.o(.constdata)
</UL>
<P><STRONG><a name="[6b]"></a>rdtss_value_req_ind_handler</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, app_rdtss.o(i.rdtss_value_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rdtss_value_req_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_rdtss.o(.constdata)
</UL>
<P><STRONG><a name="[97]"></a>_printf_core</STRONG> (Thumb, 1020 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[99]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[98]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
